using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MathParser
{
    public class PostfixParser
    {
        private List<IExpression> tokenList = new List<IExpression>();

        private void Prepare(PostfixExpression expression)
        {
            
            foreach (string token in expression.tokens)
            {
                if (string.IsNullOrEmpty(token))
                    continue;

                try
                {
                    IExpression e =  Functions.GetFunction(token);
                    if (e != null)
                    {
                        tokenList.Add(e);
                    }else
                    {
                        throw new Exception(string.Format("token: \"{0}\" is unknown", token));
                    }
                }
                catch(Exception e)
                {
                    throw new Exception(e.Message);
                }
            }

        }
        public PostfixParser(PostfixExpression expression)
        {
            Prepare(expression);
        }
        public double Calculate()
        {
            Stack<double> operands = new Stack<double>();
            foreach (var op in tokenList)
            {
                op.Parse(operands);
            }
            return operands.Pop();
        }
    }
}
